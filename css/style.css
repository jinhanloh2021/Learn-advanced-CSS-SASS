/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*Universal selector, selects all DOM elements. Reset margin and padding to 0.*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; /*All elements inherit the border-box property for box-sizing. Inherited from body element*/
}

html {
  font-size: 62.5%; /*root font size. 1rem = 10px, 1.5rem = 15px*/
}

/*Set font defaults*/
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; /*Not inherited by children. Only applies to body.*/
  box-sizing: border-box; /*Include element's padding and border into total width and height*/
}

.header {
  position: relative;
  height: 95vh; /*Means that header will always be 95% of viewport*/
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url("../img/hero.jpg"); /*Adding img to an element. Add linear-gradient.*/
  background-size: cover; /*Means that the image will adjust in size to fit the viewport*/
  background-position: top; /*Means that top of img is fixed to top of screen. Bottom will scale*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

/*Absolute element inside relative element, the absolute measurements will be within the parent element.*/
.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem; /*width will be figured out by the browser*/
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  text-align: center;
  transform: translate(
    -50%,
    -50%
  ); /*Shifts left and top by 50% of the ELEMENT's size, not the PARENT'S size*/
}

.heading-primary {
  color: #fff;
  text-transform: uppercase; /*Makes entire text to upper*/

  backface-visibility: hidden; /* to fix shaky behaviour in animation */
  margin-bottom: 6rem;
}

/*To make main and sub top and bottom, we can make them block-elements. So that they take up the entire width of the screen.*/
.heading-primary--main {
  display: block; /*set this span element to be block. By default, <span> are inline elements.*/
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  margin-right: -3.5rem; /*Letter spacing adds a space at the end of the text. Use negative margin to shift back.*/

  /*animations*/
  animation-name: moveInLeft;
  animation-duration: 1.25s;
  animation-timing-function: cubic-bezier(0.19, 1, 0.22, 1);

  /*
  animation-iteration-count: 3;
  animation-delay: 3s;
  */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.74rem;
  margin-right: -1.74rem;

  /*animations*/
  animation: moveInRight 1.25s cubic-bezier(0.19, 1, 0.22, 1);

  /* animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: cubic-bezier(0.19, 1, 0.22, 1); */
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  15% {
    transform: translateX(2rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  15% {
    transform: translateX(-2rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/*Pseudoclass*/
.btn:link,
.btn:visited {
  position: relative;
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 5rem;
  transition: all 0.2s;
  font-size: 1.6rem;
}

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.5);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

/*After pseudo element. Treated like the child of btn*/
.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 5rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn--white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(10rem);
  }

  15% {
    transform: translateY(-2rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn--animated {
  animation: moveInBottom 1.25s cubic-bezier(0.19, 1, 0.22, 1) 0.25s;
  animation-fill-mode: backwards;
}
